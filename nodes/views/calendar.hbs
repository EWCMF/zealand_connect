<div class="container-fluid">
    <div class="col-12 col-lg-8 mt-5 mb-5">
        <div id='calendar'></div>
    </div>
</div>

{{> event-modal}}

<style>
    .tooltip-inner {
        max-width: 236px !important;
        height: 76px;
        font-weight: 500;
        padding: 10px 15px 10px 20px;
        background: #faee84;
        color: rgb(0, 0, 0, .7);
        border: 1px solid #000000;
        text-align: left;
    }

    .tooltip.show {
        opacity: 1;
    }

    .tooltip-arrow {
        background: #faee84;
        color: #faee84;
    }
</style>

<script src='fullcalendar/main.js'></script>
<script src='fullcalendar/locales/da.js'></script>
<script src="https://unpkg.com/popper.js/dist/umd/popper.min.js"></script>
<script src="https://unpkg.com/tooltip.js/dist/umd/tooltip.min.js"></script>
<script>
    function openEventModal() {
        $(document).ready(function () {
            $('#eventModal').modal({
                backdrop: 'static',
                keyboard: false
            });

            $("#eventModal").modal('show');
        });
    }

    document.addEventListener('DOMContentLoaded', function() {
        let calendarEl = document.getElementById('calendar');
        let calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            themeSystem: 'bootstrap',
            headerToolbar: {
                start: 'title', // will normally be on the left. if RTL, will be on the right
                center: '',
                end: 'prevYear,prev today next,nextYear' // will normally be on the right. if RTL, will be on the left
            },
            titleFormat: {
                year: 'numeric',
                month: 'long'
            },
            locale: '{{language}}',
            timeZone: 'local',
            buttonText: {
                today:    '{{language}}' === 'en' ? 'today' : 'i dag',
                month:    '{{language}}' === 'en' ? 'month' : 'm√•ned',
                week:     '{{language}}' === 'en' ? 'week' : 'uge',
                day:      '{{language}}' === 'en' ? 'day' : 'dag',
                list:     '{{language}}' === 'en' ? 'list' : 'liste'
            },
            // // Experiment with a popover
            // eventDidMount: function(info) {
            //     info.el.setAttribute("title", info.event._def.title);
            //     info.el.setAttribute("data-content", info.event.extendedProps.description);
            //     info.el.setAttribute("data-toggle", "popover");
            // },
            eventClick: function(info) {
                info.jsEvent.preventDefault(); // don't let the browser navigate
                console.log(info)
                document.getElementById("eventTitle").innerHTML = info.event._def.title;
                document.getElementById("startTime").innerHTML = "<b>Starttidspunkt: </b>" + info.event._instance.range.start;
                document.getElementById("endTime").innerHTML = "<b>Sluttidspunkt: </b>" + info.event._instance.range.end;
                document.getElementById("eventDescription").innerHTML = info.event.extendedProps.description;
                if(info.event._def.url){
                    document.getElementById("eventURL").innerHTML = info.event._def.url;
                    document.getElementById("eventURL").href = info.event._def.url;
                } else {
                    document.getElementById("eventURL").innerHTML = null;
                    document.getElementById("eventURL").href = null;
                }
                openEventModal()
            }
        });

        let events = null;
        let xhr = new XMLHttpRequest();
        xhr.onload = function () {
            events = JSON.parse(xhr.responseText);
            for (let event of events) {
                let formattedEvent = {
                    title: event.title,
                    start: event.startDate,
                    end: event.endDate,
                    description: event.description
                }
                // console.log(event.description)
                if (event.url){
                    formattedEvent.url = event.url
                }
                calendar.addEvent(formattedEvent)
            }
        }
        xhr.open("POST", '/calendar/events');
        xhr.send();

        calendar.render();
    });

</script>